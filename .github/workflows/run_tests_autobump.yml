name: Run tests and bump version

on: push

# Setting this up due to the warning "Workflow doesn't contain permissions"
# Default minimal permissions for all jobs unless overridden at job level
permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [3.13]

    steps:
      - name: Create .taiga directory
        run: |
          mkdir ~/.taiga
          echo ${{ secrets.TAIGA_TOKEN }} > ~/.taiga/token
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up cache
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run pytest
        run: poetry run pytest
  
  bump-version:
    if: ${{ !startsWith(github.event.head_commit.message, 'bump:') && (github.ref_name == 'master')}}
    needs: pytest
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    # This job needs write permissions to commit version changes
    permissions:
      contents: write
    outputs:
      # Map the step outputs to job outputs
      current_version: ${{ steps.current-version.outputs.current_version }}
      bumped_version: ${{ steps.bumped-version.outputs.bumped_version }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          fetch-depth: 0
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up cache
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Store current version output
        id: current-version
        run: echo "current_version=$(poetry run cz version -p)" >> $GITHUB_OUTPUT
      - name: Get current version
        run: echo "${{ steps.current-version.outputs.current_version}}"
      - name: Create bump and changelog
        id: cz
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_consistency: true
      - name: Store bumped version output
        id: bumped-version
        run: echo "bumped_version=${{ steps.cz.outputs.version }}" >> $GITHUB_OUTPUT

  publish-version:
    needs: bump-version
    if: ${{ (needs.bump-version.outputs.current_version != needs.bump-version.outputs.bumped_version) && (github.ref_name == 'master') }} 
    runs-on: ubuntu-latest
    # This job needs write permissions to pull from master and commit changes
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          fetch-depth: 0
      - run: |
          git pull origin HEAD:master
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          # See instructions here: https://github.com/google-github-actions/auth?tab=readme-ov-file#service-account-key-json
          credentials_json: ${{ secrets.TAIGAPY_SVC_ACCT }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up cache
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Set up for publishing
        run: |
          poetry self add keyrings.google-artifactregistry-auth
          poetry config repositories.public-python https://us-central1-python.pkg.dev/cds-artifacts/public-python/
      - name: Publish new taigapy version to Artifact Registry
        run: poetry publish --build --repository public-python
 